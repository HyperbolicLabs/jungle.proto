// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: king/v1/vacancy.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ask the King to list open Baronships in the kingdom.
//
// Filters are used to ask the King if there is a need for a new Baron
// with certain properties (e.g. matching the resources of the
// Ronin making the request).
//
// This is more lightweight than simply polling the entire
// Vacancy List and searching through it for a matching
// vacant Baronship. It also opens the door to atomic
// vacancy-fill transactions.
type ListVacanciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVacanciesRequest) Reset() {
	*x = ListVacanciesRequest{}
	mi := &file_king_v1_vacancy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVacanciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVacanciesRequest) ProtoMessage() {}

func (x *ListVacanciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_king_v1_vacancy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVacanciesRequest.ProtoReflect.Descriptor instead.
func (*ListVacanciesRequest) Descriptor() ([]byte, []int) {
	return file_king_v1_vacancy_proto_rawDescGZIP(), []int{0}
}

// all the corresponding open Baronships in the kingdom
type ListVacanciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVacanciesResponse) Reset() {
	*x = ListVacanciesResponse{}
	mi := &file_king_v1_vacancy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVacanciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVacanciesResponse) ProtoMessage() {}

func (x *ListVacanciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_king_v1_vacancy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVacanciesResponse.ProtoReflect.Descriptor instead.
func (*ListVacanciesResponse) Descriptor() ([]byte, []int) {
	return file_king_v1_vacancy_proto_rawDescGZIP(), []int{1}
}

var File_king_v1_vacancy_proto protoreflect.FileDescriptor

const file_king_v1_vacancy_proto_rawDesc = "" +
	"\n" +
	"\x15king/v1/vacancy.proto\x12\aking.v1\"\x16\n" +
	"\x14ListVacanciesRequest\"\x17\n" +
	"\x15ListVacanciesResponse2`\n" +
	"\x0eVacancyService\x12N\n" +
	"\rListVacancies\x12\x1d.king.v1.ListVacanciesRequest\x1a\x1e.king.v1.ListVacanciesResponseB\x88\x01\n" +
	"\vcom.king.v1B\fVacancyProtoP\x01Z.github.com/hyperboliclabs/jungle.proto/king/v1\xa2\x02\x03KXX\xaa\x02\aKing.V1\xca\x02\aKing\\V1\xe2\x02\x13King\\V1\\GPBMetadata\xea\x02\bKing::V1b\x06proto3"

var (
	file_king_v1_vacancy_proto_rawDescOnce sync.Once
	file_king_v1_vacancy_proto_rawDescData []byte
)

func file_king_v1_vacancy_proto_rawDescGZIP() []byte {
	file_king_v1_vacancy_proto_rawDescOnce.Do(func() {
		file_king_v1_vacancy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_king_v1_vacancy_proto_rawDesc), len(file_king_v1_vacancy_proto_rawDesc)))
	})
	return file_king_v1_vacancy_proto_rawDescData
}

var file_king_v1_vacancy_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_king_v1_vacancy_proto_goTypes = []any{
	(*ListVacanciesRequest)(nil),  // 0: king.v1.ListVacanciesRequest
	(*ListVacanciesResponse)(nil), // 1: king.v1.ListVacanciesResponse
}
var file_king_v1_vacancy_proto_depIdxs = []int32{
	0, // 0: king.v1.VacancyService.ListVacancies:input_type -> king.v1.ListVacanciesRequest
	1, // 1: king.v1.VacancyService.ListVacancies:output_type -> king.v1.ListVacanciesResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_king_v1_vacancy_proto_init() }
func file_king_v1_vacancy_proto_init() {
	if File_king_v1_vacancy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_king_v1_vacancy_proto_rawDesc), len(file_king_v1_vacancy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_king_v1_vacancy_proto_goTypes,
		DependencyIndexes: file_king_v1_vacancy_proto_depIdxs,
		MessageInfos:      file_king_v1_vacancy_proto_msgTypes,
	}.Build()
	File_king_v1_vacancy_proto = out.File
	file_king_v1_vacancy_proto_goTypes = nil
	file_king_v1_vacancy_proto_depIdxs = nil
}
